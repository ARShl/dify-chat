name: release

on:
   push:
    branches: [main]
  # The "create tags" trigger is specifically focused on the creation of new tags, while the "push tags" trigger is activated when tags are pushed, including both new tag creations and updates to existing tags.
   create:
    tags:
      - "v*.*.*"                  # normal release
      - "nightly"                 # the only one mutable tag

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure workspace ownership
        run: echo "chown -R $USER $GITHUB_WORKSPACE" && sudo chown -R $USER $GITHUB_WORKSPACE

      # https://github.com/actions/checkout/blob/v3/README.md
      - name: Check out code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}  # Use the secret as an environment variable
          fetch-depth: 0
          fetch-tags: true

      # https://github.com/marketplace/actions/docker-login
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push full image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: hello2008/dify-chat:nightly
          file: Dockerfile
          platforms: linux/amd64
      - name: Build and push full image to Aliyun
        run:
           docker login --username=${{ secrets.ALIYUN_REGISTRY_USER }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ secrets.ALIYUN_REGISTRY }}
           docker build . --file Dockerfile --tag ${{ secrets.ALIYUN_REGISTRY }}/{{ secrets.ALIYUN_NAME_SPACE }}/dify-chat:nightly
           docker push ${{ secrets.ALIYUN_REGISTRY }}/{{ secrets.ALIYUN_NAME_SPACE }}/dify-chat:nightly
      - name: Build and push full image to HuaweiCloud
        run:
           docker login --username=${{ secrets.HUAWEICLOUD_REGISTRY_USER }} --password=${{ secrets.HUAWEICLOUD_REGISTRY_PASSWORD }} ${{ secrets.HUAWEICLOUD_REGISTRY }}
           docker build . --file Dockerfile --tag ${{ secrets.HUAWEICLOUD_REGISTRY }}/dify-chat/dify-chat:nightly
           docker push ${{ secrets.HUAWEICLOUD_REGISTRY }}/dify-chat//dify-chat:nightly